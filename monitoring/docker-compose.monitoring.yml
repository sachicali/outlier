version: '3.8'

services:
  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: outlier-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./alert-rules.yml:/etc/prometheus/alert-rules.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - monitoring

  # Grafana for dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: outlier-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./dashboards:/etc/grafana/provisioning/dashboards
    networks:
      - monitoring
    depends_on:
      - prometheus

  # Jaeger for distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: outlier-jaeger
    ports:
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - monitoring

  # Node Exporter for system metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: outlier-node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitoring

  # PostgreSQL Exporter (optional - if you want detailed DB metrics)
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: outlier-postgres-exporter
    ports:
      - "9187:9187"
    environment:
      - DATA_SOURCE_NAME=postgresql://username:password@host:5432/database?sslmode=disable
    networks:
      - monitoring
    profiles:
      - with-db-metrics

  # Redis Exporter (optional - if you want detailed Redis metrics)
  redis-exporter:
    image: oliver006/redis_exporter
    container_name: outlier-redis-exporter
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis://host:6379
    networks:
      - monitoring
    profiles:
      - with-redis-metrics

  # AlertManager for handling alerts
  alertmanager:
    image: prom/alertmanager:latest
    container_name: outlier-alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/alertmanager
    networks:
      - monitoring
    profiles:
      - with-alerting

  # Loki for log aggregation (optional)
  loki:
    image: grafana/loki:latest
    container_name: outlier-loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki-config.yml:/etc/loki/local-config.yaml
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - monitoring
    profiles:
      - with-logs

  # Promtail for log shipping (optional)
  promtail:
    image: grafana/promtail:latest
    container_name: outlier-promtail
    volumes:
      - ./promtail-config.yml:/etc/promtail/config.yml
      - ../server/logs:/var/log/outlier:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - monitoring
    profiles:
      - with-logs
    depends_on:
      - loki

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
  alertmanager_data:
  loki_data: