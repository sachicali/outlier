name: Security Scanning

on:
  schedule:
    - cron: '0 2 * * 1'  # Weekly on Monday at 2 AM UTC
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
    
    - name: Install dependencies
      run: bun run install:all
    
    - name: Run audit
      run: |
        echo "🔍 Scanning root dependencies..."
        bunx audit-ci --moderate
        
        echo "🔍 Scanning client dependencies..."
        cd client && bunx audit-ci --moderate
        
        echo "🔍 Scanning server dependencies..."
        cd ../server && bunx audit-ci --moderate
    
    - name: Check for outdated dependencies
      run: |
        echo "📦 Checking for outdated packages..."
        bunx npm-check-updates --errorLevel 1

  code-security:
    name: Code Security Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: javascript, typescript
        queries: security-and-quality
    
    - name: Autobuild
      uses: github/codeql-action/autobuild@v2
    
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
    
    - name: Run Semgrep
      uses: returntocorp/semgrep-action@v1
      with:
        config: >-
          p/security-audit
          p/secrets
          p/javascript
          p/typescript
          p/react
          p/nodejs
          p/owasp-top-ten

  secret-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: TruffleHog OSS
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: ${{ github.event.repository.default_branch }}
        head: HEAD
        extra_args: --debug --only-verified
    
    - name: GitLeaks
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  container-scan:
    name: Container Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build container images
      run: |
        docker build -t outlier-client:latest ./client
        docker build -t outlier-server:latest ./server
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: outlier-server:latest
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH'
    
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'

  license-check:
    name: License Compliance Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
    
    - name: Install dependencies
      run: bun run install:all
    
    - name: Check licenses
      run: |
        bunx license-checker --production --summary --failOn "GPL;AGPL;LGPL;CPOL"
        
        cd client && bunx license-checker --production --summary --failOn "GPL;AGPL;LGPL;CPOL"
        
        cd ../server && bunx license-checker --production --summary --failOn "GPL;AGPL;LGPL;CPOL"

  security-report:
    name: Security Report
    runs-on: ubuntu-latest
    needs: [dependency-scan, code-security, secret-scan, container-scan, license-check]
    if: always()
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Generate security report
      run: |
        echo "# 🔒 Security Scan Report" > security-report.md
        echo "" >> security-report.md
        echo "**Date**: $(date)" >> security-report.md
        echo "**Branch**: ${{ github.ref }}" >> security-report.md
        echo "**Commit**: ${{ github.sha }}" >> security-report.md
        echo "" >> security-report.md
        
        echo "## Scan Results" >> security-report.md
        echo "" >> security-report.md
        
        echo "| Scan Type | Status |" >> security-report.md
        echo "|-----------|--------|" >> security-report.md
        echo "| Dependency Vulnerabilities | ${{ needs.dependency-scan.result }} |" >> security-report.md
        echo "| Code Security Analysis | ${{ needs.code-security.result }} |" >> security-report.md
        echo "| Secret Detection | ${{ needs.secret-scan.result }} |" >> security-report.md
        echo "| Container Security | ${{ needs.container-scan.result }} |" >> security-report.md
        echo "| License Compliance | ${{ needs.license-check.result }} |" >> security-report.md
        
        cat security-report.md
    
    - name: Upload security report
      uses: actions/upload-artifact@v3
      with:
        name: security-report-${{ github.run_id }}
        path: security-report.md
        retention-days: 30
    
    - name: Comment on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const report = fs.readFileSync('security-report.md', 'utf8');
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: report
          });